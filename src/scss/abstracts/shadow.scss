// Copyright 2021 Markus Leupold-LÃ¶wenthal
//
// This file is part of FreeBeeGee.
//
// FreeBeeGee is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any
// later version.
//
// FreeBeeGee is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
// details.
//
// You should have received a copy of the GNU Affero General Public License
// along with FreeBeeGee. If not, see <https://www.gnu.org/licenses/>.

////
/// shadow.scss
///
/// Helpers that calculate highlights and shadows.
///
/// @group abstracts
/// @access public
////

$shadow-x: 2; /// light length/direction x
$shadow-y: 3; /// light length/direction y

/// shadow direction angle
$shadow-direction: math.atan(math.div($shadow-x, $shadow-y));

/// shadow direction length
$shadow-length: math.sqrt($shadow-x * $shadow-x + $shadow-y * $shadow-y);

@function shadow-x-px($r) {
  @return math.sin($r + $shadow-direction) * 1px;
}

@function shadow-y-px($r) {
  @return math.cos($r + $shadow-direction) * 1px;
}

/// Return a drop-shadow value for the configured shadow.
///
/// @example scss
///   shadow(90, 2px, #001122)
///
/// @param {length} $r The transform:rotation() of the element to compensate for.
/// @param {length} $blur The amount of blur.
/// @param {length} $color The color of the shadow
/// @return {value} The drop shadow value, e.g. '2px 3px 2px #001122'.
@function shadow($r, $blur, $color) {
  @return
  shadow-x-px($r) * $shadow-length
  shadow-y-px($r) * $shadow-length
  $blur
  $color;
}

/// Return a box-shadow highlight and darklight value for the configured light source.
///
/// @example scss
///   shadow(90, 2px, #001122)
///
/// @param {length} $r The transform:rotation() of the element to compensate for.
/// @param {length} $blur The amount of blur.
/// @param {length} $color The color of the shadow
/// @return {value} The drop shadow value, e.g. '2px 3px 2px #001122'.
@function highlight($r) {
  @return
  shadow-x-px($r) * 1.5 shadow-y-px($r) * 1.5 .5px 0 $color-white-15a inset,
  shadow-x-px($r - 180) * 1.5 shadow-y-px($r - 180) * 1.5 .5px 0 $color-black-20a inset;
}

$shadow-0: shadow(0, 2px, $color-black-65a);
$shadow-60: shadow(60, 2px, $color-black-65a);
$shadow-90: shadow(90, 2px, $color-black-65a);
$shadow-120: shadow(120, 2px, $color-black-65a);
$shadow-180: shadow(180, 2px, $color-black-65a);
$shadow-240: shadow(240, 2px, $color-black-65a);
$shadow-270: shadow(270, 2px, $color-black-65a);
$shadow-300: shadow(300, 2px, $color-black-65a);

$shadow-flat-0: shadow(0, 0, $color-black-35a);
$shadow-flat-60: shadow(60, 0, $color-black-35a);
$shadow-flat-90: shadow(90, 0, $color-black-35a);
$shadow-flat-120: shadow(120, 0, $color-black-35a);
$shadow-flat-180: shadow(180, 0, $color-black-35a);
$shadow-flat-240: shadow(240, 0, $color-black-35a);
$shadow-flat-270: shadow(270, 0, $color-black-35a);
$shadow-flat-300: shadow(300, 0, $color-black-35a);
$shadow-flat-overlay: shadow(0, 0, $color-black-35a);
