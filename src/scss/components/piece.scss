// Copyright 2021 Markus Leupold-LÃ¶wenthal
//
// This file is part of FreeBeeGee.
//
// FreeBeeGee is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any
// later version.
//
// FreeBeeGee is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
// details.
//
// You should have received a copy of the GNU Affero General Public License
// along with FreeBeeGee. If not, see <https://www.gnu.org/licenses/>.

////
/// @group components
///
/// Gaming pieces on the virtual gaming board. E.g. tiles and tokens.
///
/// @access public
////

$piece-color: $color-gray-95;
$piece-tile-size: 64px;
$piece-border-size: 3px;
$piece-border-radius: 3px;
$piece-margin-size: 4px;
$piece-rotate: 1deg;

$piece-shadow-height: 4px;
$piece-shadow: ($piece-shadow-height / 2) ($piece-shadow-height / 2) ($piece-shadow-height - 1) $color-black-75a;
$piece-shadow-90: ($piece-shadow-height / 2) ($piece-shadow-height / -2) ($piece-shadow-height - 1) $color-black-75a;
$piece-shadow-180: ($piece-shadow-height / -2) ($piece-shadow-height / -2) ($piece-shadow-height - 1) $color-black-75a;
$piece-shadow-270: ($piece-shadow-height / -2) ($piece-shadow-height / 2) ($piece-shadow-height - 1) $color-black-75a;
$piece-shadow-flat: 3px 3px 0 $color-black-35a;
$piece-shadow-flat-90: 3px -3px 0 $color-black-35a;
$piece-shadow-flat-180: -3px ($piece-shadow-height / -2) 0 $color-black-35a;
$piece-shadow-flat-270: -3px 3px 0 $color-black-35a;
$piece-shadow-overlay: 4px 4px 4px $color-black-65a;

@mixin piece-rotate($r, $amount, $pre: '', $post: '') {
  &[id^='0'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 0) #{$post}; }
  &[id^='1'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 1) #{$post}; }
  &[id^='2'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 2) #{$post}; }
  &[id^='3'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 3) #{$post}; }
  &[id^='4'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 4) #{$post}; }
  &[id^='5'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 5) #{$post}; }
  &[id^='6'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 6) #{$post}; }
  &[id^='7'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 7) #{$post}; }
  &[id^='8'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 8) #{$post}; }
  &[id^='9'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 9) #{$post}; }
  &[id^='a'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 10) #{$post}; }
  &[id^='b'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 11) #{$post}; }
  &[id^='c'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 12) #{$post}; }
  &[id^='d'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 13) #{$post}; }
  &[id^='e'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 14) #{$post}; }
  &[id^='f'] { transform: #{$pre} rotate($r + ($amount / 2) - $amount / 16 * 15) #{$post}; }
}

@mixin piece-translate($x, $y, $amount, $pre: '', $post: '') {
  $token-offset: 4px;
  &[id^='0'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 0, $y + ($amount / 2) - $amount / 16 * 0) #{$post}; }
  &[id^='1'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 1, $y + ($amount / 2) - $amount / 16 * 8) #{$post}; }
  &[id^='2'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 2, $y + ($amount / 2) - $amount / 16 * 7) #{$post}; }
  &[id^='3'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 3, $y + ($amount / 2) - $amount / 16 * 6) #{$post}; }
  &[id^='4'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 4, $y + ($amount / 2) - $amount / 16 * 5) #{$post}; }
  &[id^='5'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 5, $y + ($amount / 2) - $amount / 16 * 4) #{$post}; }
  &[id^='6'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 6, $y + ($amount / 2) - $amount / 16 * 3) #{$post}; }
  &[id^='7'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 7, $y + ($amount / 2) - $amount / 16 * 2) #{$post}; }
  &[id^='8'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 8, $y + ($amount / 2) - $amount / 16 * 1) #{$post}; }
  &[id^='9'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 9, $y + ($amount / 2) - $amount / 16 * 15) #{$post}; }
  &[id^='a'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 10, $y + ($amount / 2) - $amount / 16 * 14) #{$post}; }
  &[id^='b'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 11, $y + ($amount / 2) - $amount / 16 * 13) #{$post}; }
  &[id^='c'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 12, $y + ($amount / 2) - $amount / 16 * 12) #{$post}; }
  &[id^='d'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 13, $y + ($amount / 2) - $amount / 16 * 11) #{$post}; }
  &[id^='e'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 14, $y + ($amount / 2) - $amount / 16 * 10) #{$post}; }
  &[id^='f'] { transform: #{$pre} translate($x + ($amount / 2) - $amount / 16 * 15, $y + ($amount / 2) - $amount / 16 * 9) #{$post}; }
}

// --- piece basics (size, ...) ------------------------------------------------

.piece {
  #{'--fbg-layer-image'}: none;

  align-items: flex-end;
  background-color: transparent;
  background-position: center;
  background-size: cover;
  display: flex;
  height: $piece-tile-size;
  justify-content: center;
  width: $piece-tile-size;

  $piece-tile-half: $piece-tile-size / 2;

  // --- size ------------------------------------------------------------------

  @for $x from 1 through 32 {
    &.is-w-#{$x} {
      width: $x * $piece-tile-size;
      &.is-rotate-270 { transform-origin: $piece-tile-half * $x $piece-tile-half * $x; }
    }
  }

  @for $y from 1 through 32 {
    &.is-h-#{$y} {
      height: $y * $piece-tile-size;
      &.is-rotate-90 { transform-origin: $piece-tile-half * $y $piece-tile-half * $y; }
    }
  }

  // --- labels (flexbox positions) --------------------------------------------

  $label-offset: 8px;

  .label {
    @extend %p-micro;

    background-color: $color-black-50a;
    border-radius: 2em;
    color: $color-white-100;
    padding: .125em .5em;
    pointer-events: none;
    position: relative;
    top: $label-offset;
    white-space: nowrap;
  }

  &:hover > .label {
    font-size: px(16);
  }

  // --- additional layer (dice) -----------------------------------------------

  &.has-layer::after {
    background-color: transparent;
    background-image: var(--fbg-layer-image);
    background-position: center;
    background-size: cover;
    bottom: 0;
    content: '';
    display: block;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }

  // --- rotation --------------------------------------------------------------

  &.is-rotate-0 {
    transform: rotate(0deg);
  }

  &.is-rotate-90 {
    align-items: center;
    justify-content: flex-end;
    transform: rotate(90deg);

    .label {
      left: $label-offset;
      top: 0;
      transform: translateY(-50%) rotate(-90deg) translateX(50%);
      transform-origin: 100% 100%;
    }
  }

  &.is-rotate-180 {
    align-items: flex-start;
    justify-content: center;
    transform: rotate(180deg);

    .label {
      top: -$label-offset;
      transform: rotate(180deg);
    }
  }

  &.is-rotate-270 {
    align-items: center;
    justify-content: flex-start;
    transform: rotate(270deg);

    .label {
      right: $label-offset;
      top: 0;
      transform: translateY(-50%) rotate(90deg) translateX(-50%);
      transform-origin: 0 100%;
    }
  }

  // --- drag-n-drop -----------------------------------------------------------

  &.dragging {
    opacity: .5;

    &.dragging-hidden {
      opacity: 0;
    }
  }

  &:not(.dragging) {
    $piece-transition: 200ms ease-out;
    transition: left $piece-transition, top $piece-transition;
  }
}

// --- regular tiles -----------------------------------------------------------

.piece-tile {
  background-color: $piece-color;

  &.is-selected {
    box-shadow: 0 0 0 $piece-border-size $color-secondary inset;
  }

  // --- quality settings ---

  .is-quality-medium & {
    box-shadow: $piece-shadow-flat;

    &.is-selected { box-shadow: 0 0 $piece-border-size $color-secondary inset, $piece-shadow-flat; }

    &.is-rotate-90 {
      box-shadow: $piece-shadow-flat-90;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-flat-90; }
    }

    &.is-rotate-180 {
      box-shadow: $piece-shadow-flat-180;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-flat-180; }
    }

    &.is-rotate-270 {
      box-shadow: $piece-shadow-flat-270;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-flat-270; }
    }
  }

  .is-quality-high & {
    box-shadow: $piece-shadow;

    &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow; }

    &.is-rotate-90 {
      box-shadow: $piece-shadow-90;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-90; }
    }

    &.is-rotate-180 {
      box-shadow: $piece-shadow-180;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-180; }
    }

    &.is-rotate-270 {
      box-shadow: $piece-shadow-270;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-270; }
    }
  }

  .is-quality-ultra & {
    box-shadow: 3px 3px 1px -2px $color-white-15a inset, -3px -3px 1px -2px $color-black-20a inset, $piece-shadow;

    @include piece-rotate(0deg, $piece-rotate);

    &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow; }

    &.is-rotate-90 {
      @include piece-rotate(90deg, $piece-rotate);
      box-shadow: 3px -3px 1px -2px $color-white-15a inset, -3px 3px 1px -2px $color-black-20a inset, $piece-shadow-90;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-90; }
    }

    &.is-rotate-180 {
      @include piece-rotate(180deg, $piece-rotate);
      box-shadow: -3px -3px 1px -2px $color-white-15a inset, 3px 3px 1px -2px $color-black-20a inset, $piece-shadow-180;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-180; }
    }

    &.is-rotate-270 {
      @include piece-rotate(270deg, $piece-rotate);
      box-shadow: -3px 3px 1px -2px $color-white-15a inset, 3px -3px 1px -2px $color-black-20a inset, $piece-shadow-270;
      &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset, $piece-shadow-270; }
    }
  }

  .is-quality-high &,
  .is-quality-ultray & {
    border-radius: $piece-border-radius;
  }
}

// --- tokens ------------------------------------------------------------------

.piece-token {
  #{'--fbg-border-color'}: $piece-color;

  background-color: $piece-color; // tile background
  border: $piece-border-size solid var(--fbg-border-color);
  border-radius: $piece-tile-size;

  &.is-n::after {
    align-items: center;
    background-color: var(--fbg-border-color);
    border-radius: 100%;
    display: flex;
    flex-direction: row;
    font-size: .85em;
    font-weight: 600;
    height: 1rem;
    justify-content: center;
    margin-top: -.5rem;
    position: absolute;
    right: -3px;
    top: 50%;
    width: 1rem;
  }
  &.is-n-1::after { content: '1'; }
  &.is-n-2::after { content: '2'; }
  &.is-n-3::after { content: '3'; }
  &.is-n-4::after { content: '4'; }
  &.is-n-5::after { content: '5'; }
  &.is-n-6::after { content: '6'; }
  &.is-n-7::after { content: '7'; }
  &.is-n-8::after { content: '8'; }
  &.is-n-9::after { content: '9'; }
  &.is-n-10::after { content: 'A'; }
  &.is-n-11::after { content: 'B'; }
  &.is-n-12::after { content: 'C'; }
  &.is-n-13::after { content: 'D'; }
  &.is-n-14::after { content: 'E'; }
  &.is-n-15::after { content: 'F'; }

  &.is-rotate-0 { @include piece-translate($piece-border-size, $piece-border-size, 4px, rotate(0deg)) }
  &.is-rotate-90 { @include piece-translate($piece-border-size, $piece-border-size, 4px, rotate(90deg)) }
  &.is-rotate-180 { @include piece-translate($piece-border-size, $piece-border-size, 4px, rotate(180deg)) }
  &.is-rotate-270 { @include piece-translate($piece-border-size, $piece-border-size, 4px, rotate(270deg)) }

  &.is-selected {
    #{'--fbg-border-color'}: $color-secondary !important; // sass-lint:disable-line no-important
  }

  @for $x from 1 through 32 {
    &.is-w-#{$x} { width: $x * $piece-tile-size - $piece-border-size * 2; }
  }

  @for $y from 1 through 32 {
    &.is-h-#{$y} { height: $y * $piece-tile-size - $piece-border-size * 2; }
  }

  // --- quality settings ---

  .is-quality-high &,
  .is-quality-ultra & {
    box-shadow: $piece-shadow;

    &.is-rotate-90 { box-shadow: $piece-shadow-90; }
    &.is-rotate-180 { box-shadow: $piece-shadow-180; }
    &.is-rotate-270 { box-shadow: $piece-shadow-270; }
  }

  .is-quality-medium & {
    box-shadow: $piece-shadow-flat;

    &.is-rotate-90 { box-shadow: $piece-shadow-flat-90; }
    &.is-rotate-180 { box-shadow: $piece-shadow-flat-180; }
    &.is-rotate-270 { box-shadow: $piece-shadow-flat-270; }
  }
}

// --- overlays ----------------------------------------------------------------

.piece-overlay {
  &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset; }
}

// --- others (layered) --------------------------------------------------------

.piece-other {
  transform: none;
  &::after { transform: rotate(0deg); }

  &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary inset; }

  &.is-rotate-0 {
    transform: none;
    &::after { transform: rotate(0deg); }
  }

  &.is-rotate-90 {
    transform: none;
    &::after { transform: rotate(90deg); }
  }

  &.is-rotate-180 {
    transform: none;
    &::after { transform: rotate(180deg); }
  }

  &.is-rotate-270 {
    transform: none;
    &::after { transform: rotate(270deg); }
  }

  // --- quality settings ---

  .is-quality-high &,
  .is-quality-ultra & {
    @include piece-rotate(0deg, $piece-rotate * 2);
    filter: drop-shadow($piece-shadow-overlay);

    &.is-rotate-0 {
      @include piece-rotate(0deg, $piece-rotate * 2);
    }

    &.is-rotate-90 {
      @include piece-rotate(0deg, $piece-rotate * 2);
    }

    &.is-rotate-180 {
      @include piece-rotate(0deg, $piece-rotate * 2);
    }

    &.is-rotate-270 {
      @include piece-rotate(0deg, $piece-rotate * 2);
    }
  }
}

// --- helpers -----------------------------------------------------------------

.is-scale-2 {
  background-color: $color-gray-05;
  height: $piece-tile-size * 2;
  margin: 0 auto;
  position: relative;
  width: $piece-tile-size * 2;

  &.is-selected { box-shadow: 0 0 0 $piece-border-size $color-secondary; }

  > .piece {
    left: 50%;
    position: absolute;
    top: 50%;
  }

  > .piece-token.is-max-1,
  > .piece-token.is-max-2 {
    margin: $piece-border-size / 2;
  }

  > .is-max-1,
  > .is-max-2 {
    transform: translate(-50%, -50%);
  }

  @for $x from 3 through 32 {
    > .is-max-#{$x} {
      transform: scale(2 / $x) translate(-50%, -50%);
      transform-origin: top left;
    }
  }
}
