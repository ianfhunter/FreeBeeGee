// Copyright 2021-2022 Markus Leupold-LÃ¶wenthal
//
// This file is part of FreeBeeGee.
//
// FreeBeeGee is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any
// later version.
//
// FreeBeeGee is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
// details.
//
// You should have received a copy of the GNU Affero General Public License
// along with FreeBeeGee. If not, see <https://www.gnu.org/licenses/>.

////
/// @group components
///
/// Gaming pieces on the virtual gaming board. E.g. tiles and tokens.
///
/// @access public
////

$piece-tile-size: 64px;
$piece-border-size: 3px;
$piece-margin: 3px;
$piece-corner-radius: 2px;
$piece-rotate: .5deg;

$piece-rotations: 60 90 120 180 240 270 300;

$piece-shadow-other: 3px 3px 4px $color-black-50a;

// --- 'random' piece attributes -----------------------------------------------

$piece-ids: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '_' '-' 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z';

$piece-jitter-a: (-1) (-.97) (-.94) (-.91) (-.88) (-.84) (-.81) (-.78) (-.75) (-.72) (-.69) (-.66) (-.63) (-.59) (-.56) (-.53) (-.5) (-.47) (-.44) (-.41) (-.38) (-.34) (-.31) (-.28) (-.25) (-.22) (-.19) (-.16) (-.13) (-.09) (-.06) (-.03) .03 .06 .09 .13 .16 .19 .22 .25 .28 .31 .34 .38 .41 .44 .47 .5 .53 .56 .59 .63 .66 .69 .72 .75 .78 .81 .84 .88 .91 .94 1 0;

$piece-jitter-b: .77 .27 .53 .42 .33 .7 .48 .56 .02 .91 .97 .16 .06 .11 .69 .98 .67 .72 .28 .31 .5 .09 .47 .92 .38 .22 .95 .14 .84 .63 .88 .13 .83 .8 .61 .3 .05 .44 .03 .89 .36 .23 .17 .59 .64 .75 .45 .34 .78 .73 .2 .25 .58 .39 .41 .52 .86 .19 .94 .08 .66 .55 .81 0; // last = f = none

@mixin piece-rotate($r, $amount) { // random rotation of pieces
  @each $id in $piece-ids {
    $i: index($piece-ids, $id);
    $jitter: nth($piece-jitter-a, $i);

    &[id^='#{$id}'] {
      transform: rotate($r + $amount * $jitter);
    }
  }
}

@mixin piece-jitter($amount) { // random translation of pieces
  @each $id in $piece-ids {
    $i: index($piece-ids, $id);
    $jitter: nth($piece-jitter-a, $i);
    $jitterb: nth($piece-jitter-b, $i);

    &[id^='#{$id}'] {
      // transform: rotate($r + $amount * $jitter);
      transform: translate(
        math.sin(180deg * $jitter) * $amount * $jitterb,
          math.cos(180deg * $jitter) * $amount * $jitterb
      );

      @each $r in $piece-rotations {
        &.is-rotate-#{$r} {
          transform: rotate($r * 1deg) translate(
            (math.sin($r * 1deg + 180deg * $jitter) * $amount * $jitterb),
              (math.cos($r * 1deg + 180deg * $jitter) * $amount * $jitterb)
          );
        }
      }
    }
  }
}

// --- piece basics (size, ...) ------------------------------------------------

@keyframes whirl {
  from {
    transform: rotate(0deg) translateX(4px);
  }

  to {
    transform: rotate(360deg) translateX(4px);
  }
}

:root {
  #{'--fbg-x'}: 0;
  #{'--fbg-y'}: 0;
  #{'--fbg-z'}: 0;
  #{'--fbg-color'}: var(--fbg-color-medium);
  #{'--fbg-color-invert'}: var(--fbg-color-light);
  #{'--fbg-border-color'}: var(--fbg-color-medium);
  #{'--fbg-border-color-invert'}: var(--fbg-color-light);
  #{'--fbg-material'}: none;
  #{'--fbg-decal'}: none;
  #{'--fbg-image'}: none;
  #{'--fbg-mask'}: none;
}

.piece {
  align-items: center; // mainly for labels
  background-color: var(--fbg-color);
  background-image: var(--fbg-image);
  background-position: center;
  background-size: cover;
  display: flex;
  height: $piece-tile-size;
  justify-content: center;
  left: var(--fbg-x);
  top: var(--fbg-y);
  width: $piece-tile-size;
  z-index: var(--fbg-z);

  $piece-tile-half: math.div($piece-tile-size, 2);

  &.is-selected {
    $selected-color: $color-secondary;
    filter:
    drop-shadow(2px 0 0 $selected-color)
    drop-shadow(0 2px 0 $selected-color)
    drop-shadow(-2px 0 0 $selected-color)
    drop-shadow(0 -2px 0 $selected-color) !important; // sass-lint:disable-line no-important
  }

  &.is-invalid {
    background-image: url('img/invalid.svg');
    background-repeat: no-repeat;
    background-size: contain;
  }

  &.is-pointer {
    animation: whirl 1s linear infinite;
    background-image: url('img/pointer.png');
    background-size: contain;
    filter: none !important; // sass-lint:disable-line no-important
  }

  // --- size ------------------------------------------------------------------

  @for $x from 1 through 32 {
    &.is-w-#{$x} {
      width: $x * $piece-tile-size;
    }
  }

  @for $y from 1 through 32 {
    &.is-h-#{$y} {
      height: $y * $piece-tile-size;
    }
  }

  // --- borders + 3d highlight ------------------------------------------------

  &.has-border {
    box-shadow: 0 0 0 $piece-border-size var(--fbg-border-color) inset;
  }

  .is-quality-high &,
  .is-quality-ultra & {
    &.has-highlight {
      box-shadow: highlight(0);

      &.has-border {
        box-shadow: highlight(0), 0 0 0 $piece-border-size var(--fbg-border-color) inset;
      }

      @each $r in $piece-rotations {
        &.is-rotate-#{$r} {
          box-shadow: highlight($r);

          &.has-border {
            box-shadow: highlight($r), 0 0 0 $piece-border-size var(--fbg-border-color) inset;
          }
        }
      }
    }
  }

  // --- labels (flexbox positions) --------------------------------------------

  .label {
    @extend %p-micro;

    background-color: $color-black-50a;
    border-radius: 2em;
    color: $color-white-100;
    padding: .125em .5em;
    pointer-events: none;
    position: relative;
    white-space: nowrap;
    z-index: 99; // within the piece

    .icon-ellipsis {
      color: $color-gray-25;
    }

    .icon {
      display: inline-block;
      height: 1em;
      margin-top: 0;
      width: 1em;

      &.icon-extra {
        display: none;
      }

      &:not(:first-child) {
        margin-left: px(2);

        &:first-of-type {
          margin-left: $spacing-micro;
        }
      }
    }
  }

  &:hover > .label {
    font-size: px(16);

    .icon-ellipsis {
      display: none;
    }

    .icon.icon-extra {
      display: inline-block;
    }
  }

  // --- backsides -------------------------------------------------------------

  .backside {
    background-image: url('img/backside.svg');
    background-repeat: repeat;
    background-size: 64px;
    height: 100%;
    mask-image: var(--fbg-mask);
    mask-size: 100%;
    pointer-events: none;
    transform: scaleX(-1);
    width: 100%;

    + .label {
      display: none; // hide labels of flipped pieces
    }
  }

  // --- piece masks -----------------------------------------------------------

  &.has-mask {
    #{'--fbg-color'}: $color-none;
    background-color: transparent;
    box-shadow: none !important; // sass-lint:disable-line no-important
  }

  .masked {
    background-color: var(--fbg-color);
    background-image: var(--fbg-image);
    background-size: cover;
    height: 100%;
    mask-image: var(--fbg-mask);
    mask-size: cover;
    pointer-events: none;
    position: absolute;
    width: 100%;
  }

  // --- additional layer (dice) -----------------------------------------------

  &.has-decal {
    background-image: var(--fbg-decal), var(--fbg-image);
    background-size: cover, cover;

    > .masked {
      background-image: var(--fbg-decal), var(--fbg-image);
      background-size: cover, cover;
    }
  }

  // --- rotation --------------------------------------------------------------

  @each $r in $piece-rotations {
    &.is-rotate-#{$r} {
      transform: rotate($r * 1deg);

      .label {
        transform: rotate($r * -1deg);
      }
    }
  }

  // --- drag-n-drop -----------------------------------------------------------

  &.is-dragging {
    opacity: .5;

    &.is-dragging-hidden {
      opacity: 0;
    }
  }

  &:not(.is-dragging) {
    $piece-transition: 200ms ease-out;
    transition: left $piece-transition, top $piece-transition;
  }
}

@mixin shadows(
  $rotate0,
  $rotate60: $rotate0,
  $rotate90: $rotate0,
  $rotate120: $rotate0,
  $rotate180: $rotate0,
  $rotate240: $rotate0,
  $rotate270: $rotate0,
  $rotate300: $rotate0
) {
  filter: drop-shadow($rotate0);

  &.is-rotate-60 { filter: drop-shadow($rotate60); }
  &.is-rotate-90 { filter: drop-shadow($rotate90); }
  &.is-rotate-120 { filter: drop-shadow($rotate120); }
  &.is-rotate-180 { filter: drop-shadow($rotate180); }
  &.is-rotate-240 { filter: drop-shadow($rotate240); }
  &.is-rotate-270 { filter: drop-shadow($rotate270); }
  &.is-rotate-300 { filter: drop-shadow($rotate300); }
}

// --- helpers -----------------------------------------------------------------

@import 'piece-token';
@import 'piece-tile';
@import 'piece-overlay';
@import 'piece-other';
@import 'piece-note';
@import 'piece-los';
